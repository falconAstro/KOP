<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DeleteButton" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="ErrorToast" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="ErrorToastDelete" xml:space="preserve">
    <value>Failed to identify item for deletion</value>
  </data>
  <data name="ErrorToastFirebase" xml:space="preserve">
    <value>Firebase error</value>
  </data>
  <data name="ErrorToastFirebaseAuth" xml:space="preserve">
    <value>Firebase auth error</value>
  </data>
  <data name="From" xml:space="preserve">
    <value>From:</value>
  </data>
  <data name="LoadedDataToast" xml:space="preserve">
    <value>Loaded data successfully</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="PersonalTaskButton" xml:space="preserve">
    <value>Create task</value>
  </data>
  <data name="PersonalTaskEntry1" xml:space="preserve">
    <value>Enter the new task</value>
  </data>
  <data name="PersonalTaskLabel1" xml:space="preserve">
    <value>Create a new personal task</value>
  </data>
  <data name="PersonalTaskLabel2" xml:space="preserve">
    <value>My current personal tasks</value>
  </data>
  <data name="PersonalTaskTitle" xml:space="preserve">
    <value>Personal tasks</value>
  </data>
  <data name="SettingsLabel1" xml:space="preserve">
    <value>My account details:</value>
  </data>
  <data name="SettingsLabel2" xml:space="preserve">
    <value>App information</value>
  </data>
  <data name="SettingsSignOut" xml:space="preserve">
    <value>Sign out</value>
  </data>
  <data name="SettingsTitle" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="SharedEventButton" xml:space="preserve">
    <value>Create event</value>
  </data>
  <data name="SharedEventConfirmation" xml:space="preserve">
    <value>Event created successfully</value>
  </data>
  <data name="SharedEventDeletion" xml:space="preserve">
    <value>Delete Event</value>
  </data>
  <data name="SharedEventDeletionConfirmation" xml:space="preserve">
    <value>Are you sure you want to delete the event</value>
  </data>
  <data name="SharedEventDeletionToast" xml:space="preserve">
    <value>Event deleted successfully</value>
  </data>
  <data name="SharedEventEntry1" xml:space="preserve">
    <value>Enter a new event</value>
  </data>
  <data name="SharedEventLabel1" xml:space="preserve">
    <value>Create a new shared event</value>
  </data>
  <data name="SharedEventLabel2" xml:space="preserve">
    <value>Current events</value>
  </data>
  <data name="SharedEventTitle" xml:space="preserve">
    <value>Shared events</value>
  </data>
  <data name="SharedEventToastNull" xml:space="preserve">
    <value>Enter an event and pick a date first!</value>
  </data>
  <data name="SharedTaskButton" xml:space="preserve">
    <value>Create task</value>
  </data>
  <data name="SharedTaskEntry" xml:space="preserve">
    <value>Enter a new task</value>
  </data>
  <data name="SharedTaskLabel" xml:space="preserve">
    <value>Create a new shared task</value>
  </data>
  <data name="SharedTaskLabel2" xml:space="preserve">
    <value>My current tasks</value>
  </data>
  <data name="SharedTaskPicker" xml:space="preserve">
    <value>Select a target user</value>
  </data>
  <data name="SharedTasksToastNull" xml:space="preserve">
    <value>Enter a task and pick a user first!</value>
  </data>
  <data name="SharedTaskTitle" xml:space="preserve">
    <value>Shared task</value>
  </data>
  <data name="ShoppingListButton1" xml:space="preserve">
    <value>Add item to shopping list</value>
  </data>
  <data name="ShoppingListButton2" xml:space="preserve">
    <value>Create shopping list</value>
  </data>
  <data name="ShoppingListConfirmationDeletion" xml:space="preserve">
    <value>Are you sure you want to delete this shopping list?</value>
  </data>
  <data name="ShoppingListCreationConfirm" xml:space="preserve">
    <value>Are you sure you want to create this shopping list?</value>
  </data>
  <data name="ShoppingListCreationToast" xml:space="preserve">
    <value>Shopping list created</value>
  </data>
  <data name="ShoppingListDelete" xml:space="preserve">
    <value>Delete shopping list</value>
  </data>
  <data name="ShoppingListDeletioniToast" xml:space="preserve">
    <value>Shopping list successfully deleted</value>
  </data>
  <data name="ShoppingListEntry" xml:space="preserve">
    <value>Enter a shopping item</value>
  </data>
  <data name="ShoppingListLabel1" xml:space="preserve">
    <value>Create a new shopping list</value>
  </data>
  <data name="ShoppingListLabel2" xml:space="preserve">
    <value>My current shopping lists</value>
  </data>
  <data name="ShoppingListTitle" xml:space="preserve">
    <value>Shopping lists</value>
  </data>
  <data name="ShoppingListToastNull" xml:space="preserve">
    <value>Enter an item first!</value>
  </data>
  <data name="ShoppingListToastNull2" xml:space="preserve">
    <value>Pick a user and add shopping items first!</value>
  </data>
  <data name="SignInButton1" xml:space="preserve">
    <value>Sign In</value>
  </data>
  <data name="SignInButton2" xml:space="preserve">
    <value>Sign Up</value>
  </data>
  <data name="SignInEntry1" xml:space="preserve">
    <value>Enter your e-mail</value>
  </data>
  <data name="SignInEntry2" xml:space="preserve">
    <value>Enter your Password</value>
  </data>
  <data name="SignInLabel1" xml:space="preserve">
    <value>Please sign in to proceed!</value>
  </data>
  <data name="SignInLabel2" xml:space="preserve">
    <value>E-mail:</value>
  </data>
  <data name="SignInLabel3" xml:space="preserve">
    <value>Password:</value>
  </data>
  <data name="SignInLabel4" xml:space="preserve">
    <value>Don't have an account?</value>
  </data>
  <data name="SignInTitle" xml:space="preserve">
    <value>Sign In</value>
  </data>
  <data name="SignInToast1" xml:space="preserve">
    <value>Signed in successfully</value>
  </data>
  <data name="SignOutConfirmation" xml:space="preserve">
    <value>Are you sure you want to sign out?</value>
  </data>
  <data name="SignOutSuccess" xml:space="preserve">
    <value>User signed out successfully</value>
  </data>
  <data name="SignUpButton" xml:space="preserve">
    <value>Sign up</value>
  </data>
  <data name="SignUpEntry1" xml:space="preserve">
    <value>Enter your username</value>
  </data>
  <data name="SignUpEntry2" xml:space="preserve">
    <value>Enter your e-mail</value>
  </data>
  <data name="SignUpEntry3" xml:space="preserve">
    <value>Enter a new password</value>
  </data>
  <data name="SignUpEntry4" xml:space="preserve">
    <value>Repeat the password</value>
  </data>
  <data name="SignUpLabel1" xml:space="preserve">
    <value>Create a new account</value>
  </data>
  <data name="SignUpLabel2" xml:space="preserve">
    <value>Username:</value>
  </data>
  <data name="SignUpLabel3" xml:space="preserve">
    <value>E-mail:</value>
  </data>
  <data name="SignUpLabel4" xml:space="preserve">
    <value>Password:</value>
  </data>
  <data name="SignUpLabel5" xml:space="preserve">
    <value>Repeat password:</value>
  </data>
  <data name="SignUpTitle" xml:space="preserve">
    <value>Sign up</value>
  </data>
  <data name="SignUpToastNullUsername" xml:space="preserve">
    <value>Enter a username first!</value>
  </data>
  <data name="SignUpToastPasswordsMissmatch" xml:space="preserve">
    <value>Passwords do not match!</value>
  </data>
  <data name="SignUpToastSuccess" xml:space="preserve">
    <value>Signed up successfully</value>
  </data>
  <data name="TaskDeletionConfirmation" xml:space="preserve">
    <value>Are you sure you want to delete the task </value>
  </data>
  <data name="TaskToast" xml:space="preserve">
    <value>Task successfully created</value>
  </data>
  <data name="TaskToastDelete" xml:space="preserve">
    <value>Task successfully deleted</value>
  </data>
  <data name="TaskToastDeletion" xml:space="preserve">
    <value>Delete task</value>
  </data>
  <data name="TaskToastNull" xml:space="preserve">
    <value>Enter a task first!</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
</root>